buildscript {
    ext.kotlin_version = '1.2.31'

    repositories {
        mavenCentral()

        maven {
            credentials {
                username System.getenv('HAULMONT_REPOSITORY_USER') ?: 'cuba'
                password System.getenv('HAULMONT_REPOSITORY_PASSWORD') ?: 'cuba123'
            }
            url System.getenv('HAULMONT_REPOSITORY_URL') ?: 'https://repo.cuba-platform.com/content/groups/work'
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0'
    }
}

group 'com.haulmont.cuba.cli'
version '1.0-SNAPSHOT'

def moduleName = "cuba.cli.main"

def velocityVersion = "1.7"
def jCommanderVersion = "1.72"
def jansiVersion = "1.17"
def guavaVersion = "21.0"
def slf4jVersion = "1.7.25"
def jlineVersion = "3.6.2"
def kodeinVersion = "5.0.0"

apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

sourceCompatibility = 10
targetCompatibility = 10

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

sourceSets {
    test {
        kotlin {
            srcDirs = ['src/test/kotlin']
        }
    }
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.beust:jcommander:$jCommanderVersion"
    implementation "org.jline:jline:$jlineVersion"
    implementation "org.fusesource.jansi:jansi:$jansiVersion"

    implementation "org.apache.velocity:velocity:$velocityVersion"

    implementation "com.google.guava:guava:$guavaVersion"

    implementation "org.slf4j:slf4j-simple:$slf4jVersion"

    implementation "org.kodein.di:kodein-di-generic-jvm:$kodeinVersion"

    implementation "net.sf.practicalxml:practicalxml:1.1.0"

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    testCompile('org.jetbrains.spek:spek-api:1.1.5') {
        exclude group: 'org.jetbrains.kotlin'
    }
    testRuntime('org.jetbrains.spek:spek-junit-platform-engine:1.1.5') {
        exclude group: 'org.junit.platform'
        exclude group: 'org.jetbrains.kotlin'
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    destinationDir = compileJava.destinationDir
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileJava {
    inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
                '--module-path', classpath.asPath
        ]
        classpath = files()
    }
}

jar {
    from("src/main/kotlin") {
        include "**/*.properties"
    }

    manifest {
        attributes 'Main-Class': 'com.haulmont.cuba.cli.EntryPointKt'
    }
}

mainClassName = "com.haulmont.cuba.cli.EntryPointKt"

startScripts {
    doLast {
        unixScript.text = unixScript.text
                .replace(
                "eval set -- \$DEFAULT_JVM_OPTS \$JAVA_OPTS \$CUBA_CLI_OPTS -classpath \"\\\"\$CLASSPATH\\\"\" $mainClassName \"\$APP_ARGS\"",
                "eval set -- \$DEFAULT_JVM_OPTS \$JAVA_OPTS \$CUBA_CLI_OPTS -p \"\\\"\$CLASSPATH\\\"\" -m $moduleName/$mainClassName \"\$APP_ARGS\"")

        windowsScript.text = windowsScript.text
                .replace(
                "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %CUBA_CLI_OPTS%  -classpath \"%CLASSPATH%\" $mainClassName %CMD_LINE_ARGS%",
                "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %CUBA_CLI_OPTS%  -p \"%CLASSPATH%\" -m $moduleName/$mainClassName %CMD_LINE_ARGS%")

    }
}